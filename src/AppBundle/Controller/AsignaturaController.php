<?php

namespace AppBundle\Controller;

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Config\Definition\Exception\Exception;
use Symfony\Component\Filesystem\Filesystem;

use AppBundle\Entity\Asignatura;
use AppBundle\Entity\Categoria;
use AppBundle\Entity\Documento;
use AppBundle\Entity\Matricula_Temarios;
use AppBundle\Entity\Matricula_Secciones;
use AppBundle\Entity\Temario;
use AppBundle\Entity\Seccion;

use AppBundle\Form\DocumentoType;

use AppBundle\Service\ObjetoUrl;

class AsignaturaController extends Controller {
    
    /**
     * @return string
     */
    private function generateUniqueFileName() {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/asignaturas/{asignatura}", name="contenido_asignatura")
     */
    public function cargar_asignatura_infoAction(Request $request, ObjetoUrl $objeto, $asignatura) {
        
        try {
            $asignatura = $objeto->buscar_asignatura($asignatura);
            if (!$asignatura) throw new Exception("Lo sentimos, la asignatura no está disponible", 1);

            $temarios = $this->getDoctrine()->getManager()->getRepository(Temario::class)->buscarTodos($asignatura);
            $asignatura->setTemarios($temarios);

            return $this->render('Asignatura/info_asignatura.html.twig', [
                'asignatura' => $asignatura,
                'activo' => 'videos'
            ]);
        } catch (Exception $e) {
            return $this->render('Contenido/acceso_denegado.html.twig', [
                'error' => $e->getMessage()
            ]);
        }
    }

    /**
     * @Route("/asignaturas/{asignatura}/videos/{categoria}", name="contenido_videos_categoria")
     */
    public function cargar_videos_categoriaAction(Request $request, ObjetoUrl $objeto, $asignatura, $categoria) {
        
        try {
            $asignatura = $objeto->buscar_asignatura($asignatura);  
            if (!$asignatura) throw new Exception("Lo sentimos, la asignatura no está disponible", 1);
            $categoria = $objeto->buscar_categoria($asignatura, $categoria);
            if (!$categoria) throw new Exception("Lo sentimos, la categoria no está disponible", 1);

            return $this->render('Asignatura/videos.html.twig', [
                'asignatura' => $asignatura,
                'categoria' => $categoria,
                'activo' => 'videos'
            ]);
        } catch (Exception $e) {
            return $this->render('Contenido/acceso_denegado.html.twig', [
                'error' => $e->getMessage()
            ]);
        }            
    }

    /**
     * @Route("/asignaturas/{asignatura}/documentos", name="contenido_documentos_asignatura")
     */
    public function cargar_documentos_asignaturaAction(Request $request, $asignatura) {

        try {
            $em = $this->getDoctrine()->getManager();
            $asignatura = $em->getRepository(Asignatura::class)->buscarPorTitulo($asignatura);
            if (!$asignatura) throw new Exception("Lo sentimos, la asignatura no está disponible", 1);

            $documentos = $this->getDoctrine()->getManager()->getRepository(Documento::class)->buscarTodos($asignatura);
            $asignatura->setDocumentos($documentos);

            $documento = new Documento();

            $form = $this->createForm(DocumentoType::class, $documento);
            $form->handleRequest($request);

            $mensaje = '';

            if ($form->isSubmitted() && $form->isValid()) {
                
                // cargamos el sistema de ficheros
                $fileSystem = new Filesystem();

                // si no existe el directorio de la asignatura se crea.
                // al indicar 'documentos/' lo estamos creando en la raiz del directorio /web del sistema
                // si quisiéramos que se creara con url absolutas deberiamos indicar '/url/documentos'
                if (!$fileSystem->exists('documentos/'.$asignatura->getTitulo())) {
                    $fileSystem->mkdir('documentos/'.$asignatura->getTitulo());
                }

                $documento = $form->getData();
                $file = $documento->getFichero();
                $extension = $file->guessExtension();
                $fileName = $this->generateUniqueFileName();

                // Guardamos el fichero con su nuevo nombre
                $file->move('documentos/'.$asignatura->getTitulo(), $fileName.'.'.$extension);
                $mensaje = 'Fichero almacendo con éxito';

                // Almacenando la entrada del documento en BBDD
                $documento->setFichero($fileName);
                $documento->setPublicado(true);
                $documento->setPrioridad(2);
                $documento->setTipo($extension);
                $documento->setAsignatura($asignatura);
                $documento->setUsuario($this->getUser());

                $em = $this->getDoctrine()->getManager();
                $em->persist($documento);
                $em->flush();

                // refrescamos los documentos de la asignatura
                $documentos = $this->getDoctrine()->getManager()->getRepository(Documento::class)->buscarTodos($asignatura);
                $asignatura->setDocumentos($documentos);                
            }

            return $this->render('Asignatura/documentos.html.twig', [
                'asignatura' => $asignatura,
                'form' => $form->createView(),
                'mensaje' => $mensaje,
                'activo' => 'documentos'
            ]);
        } catch (Exception $e) {
            return $this->render('Contenido/acceso_denegado.html.twig', [
                'error' => $e->getMessage()
            ]);
        }                            
    }     

    /**
     * @Route("/asignaturas/{asignatura}/{temario}", name="contenido_indice_temario")
     */
    public function cargar_indice_temarioAction(Request $request, ObjetoUrl $objeto, $asignatura, $temario) {
        
        try {
            $asignatura = $objeto->buscar_asignatura($asignatura);  
            if (!$asignatura) throw new Exception("Lo sentimos, la asignatura no está disponible", 1);
            $temario = $objeto->buscar_temario($asignatura, $temario);           
            if (!$temario) throw new Exception("Lo sentimos, el temario no está disponible", 1);

            $em = $this->getDoctrine()->getManager();
            $matriculado = $em->getRepository(Matricula_Temarios::class)->isMatriculado($temario, $this->getUser()); 
            $temario->setMatriculado($matriculado);

            $secciones = $this->getDoctrine()->getManager()->getRepository(Seccion::class)->buscarTodos($temario);
            $temario->setSecciones($secciones);

            foreach ($temario->getSecciones() as $seccion) {
                $matriculado = $em->getRepository(Matricula_Secciones::class)->isMatriculado($seccion, $this->getUser()); 
                $seccion->setMatriculado($matriculado);
            }

            return $this->render('Asignatura/temario.html.twig', [
                'asignatura' => $asignatura,
                'temario' => $temario,
                'activo' => 'temarios'
            ]);
        } catch (Exception $e) {
            return $this->render('Contenido/acceso_denegado.html.twig', [
                'error' => $e->getMessage()
            ]);
        }            
    }     

}
