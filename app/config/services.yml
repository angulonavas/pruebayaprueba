# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # Directiva necesaria para poder pasar servicios como argumentos al bundle SerguridadBundle
    SeguridadBundle\Controller\:
        resource: '../../src/SeguridadBundle/Controller'
        public: true

        tags: ['controller.service_arguments']

    # definición de las nuevas extensiones, las definidas por el desarrollador
    app.twig_runtime:
        class: AppBundle\Twig\AppRuntime
        public: false
        tags:
            - { name: twig.runtime }

    AppBundle\EventListener\DocumentoUploadListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postLoad }

    # SONATA ...................................................................

    # Sonata: Menú
    app.menu_sonata:
        class: AppBundle\Menu\MenuSonata
        arguments: ["@knp_menu.factory"]
        tags:
            # el alias es lo que se utilizará para obtener el menú
            - { name: knp_menu.menu_sonata, method: mainMenu, alias: mainMenuSonata }

    # Sonata: AnuncioAdmin
    admin.anuncio:
        class: AppBundle\Admin\AnuncioAdmin
        arguments: [~, AppBundle\Entity\Anuncio, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Anuncios }
        public: true        

    # Sonata: AsignaturaAdmin
    admin.asignatura:
        class: AppBundle\Admin\AsignaturaAdmin
        arguments: [~, AppBundle\Entity\Asignatura, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Asignaturas }
        calls:
            - [ addChild, ['@admin.consulta']]
            - [ addChild, ['@admin.documento']]
        public: true                               

    # Sonata: CategoriaAdmin
    admin.categoria:
        class: AppBundle\Admin\CategoriaAdmin
        arguments: [~, AppBundle\Entity\Categoria, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Categoria de videos }
        calls:
            - [ addChild, ['@admin.video']]             
        public: true                 

    # Sonata: ConsultaAdmin
    admin.consulta:
        class: AppBundle\Admin\ConsultaAdmin
        arguments: [~, AppBundle\Entity\Consulta, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Consultas }   
        calls:
            - [ addChild, ['@admin.respuesta']]            
        public: true 

    # Sonata: ConceptoAdmin
    admin.concepto:
        class: AppBundle\Admin\ConceptoAdmin
        arguments: [~, AppBundle\Entity\Concepto, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Conceptos }   
        public: true         

    # Sonata: DocumentoAdmin
    admin.documento:
        class: AppBundle\Admin\DocumentoAdmin
        arguments: [~, AppBundle\Entity\Documento, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Documentos }
        public: true         

    # Sonata: FacturaAdmin
    admin.factura:
        class: AppBundle\Admin\FacturaAdmin
        arguments: [~, AppBundle\Entity\Factura, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Facturas }
        calls:
            - [ addChild, ['@admin.concepto']]             
        public: true         

    # Sonata: ForoAsignaturaAdmin
    admin.foroAsignatura:
        class: AppBundle\Admin\ForoAsignaturaAdmin
        arguments: [~, AppBundle\Entity\Foro_Asignatura, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Foros de Asignaturas }
        public: true 

    # Sonata: Foro_GeneralAdmin
    admin.foroGeneral:
        class: AppBundle\Admin\ForoGeneralAdmin
        arguments: [~, AppBundle\Entity\Foro_General, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Foros Generales }
        public: true                        

   # Sonata: FraseAdmin
    admin.frase:
        class: AppBundle\Admin\FraseAdmin
        arguments: [~, AppBundle\Entity\Frase, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Frases }
        public: true

    # Sonata: MatriculaSecciones
    admin.matricula_secciones:
        class: AppBundle\Admin\MatriculaSeccionesAdmin
        arguments: [~, AppBundle\Entity\Matricula_Secciones, ~] 
        tags: 
            - { name: sonata.admin, manager_type: orm, label: Matricula de Secciones } 
        calls:
            - [setTemplate, [edit, 'Admin/edit.html.twig']] 
        public: true

    # Sonata: MatriculaServicios
    admin.matricula_servicios:
        class: AppBundle\Admin\MatriculaServiciosAdmin
        arguments: [~, AppBundle\Entity\Matricula_Servicios, ~] 
        tags: 
            - { name: sonata.admin, manager_type: orm, label: Matricula de Servicios } 
        calls:
            - [setTemplate, [edit, 'Admin/edit.html.twig']] 
        public: true

    # Sonata: MatriculaTemarios
    admin.matricula_temarios:
        class: AppBundle\Admin\MatriculaTemariosAdmin
        arguments: [~, AppBundle\Entity\Matricula_Temarios, ~] 
        tags: 
            - { name: sonata.admin, manager_type: orm, label: Matricula de Temarios } 
        calls:
            - [setTemplate, [edit, 'Admin/edit.html.twig']] 
        public: true
   
    # Sonata: OpcionAdmin
    admin.opcion:
        class: AppBundle\Admin\OpcionAdmin
        arguments: [~, AppBundle\Entity\Opcion_Pregunta, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Opciones de examen } 
        public: true

    # Sonata: PreguntaAdmin
    admin.pregunta:
        class: AppBundle\Admin\PreguntaAdmin
        arguments: [~, AppBundle\Entity\Pregunta_Examen, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Preguntas de examen }            
        public: true

    # Sonata: RespuestaAdmin
    admin.respuesta:
        class: AppBundle\Admin\RespuestaAdmin
        arguments: [~, AppBundle\Entity\Respuesta, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Respuestas }            
        public: true

    # Sonata: SeccionAdmin
    admin.seccion:
        class: AppBundle\Admin\SeccionAdmin
        arguments: [~, AppBundle\Entity\Seccion, AppBundle\Controller\SeccionAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Secciones }   
        public: true 

    # Sonata: ServicioAdmin
    admin.servicio:
        class: AppBundle\Admin\ServicioAdmin
        arguments: [~, AppBundle\Entity\Servicio, AppBundle\Controller\ServicioAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Servicios }
        calls:
            - [setTemplate, [edit, 'Admin/edit.html.twig']] 
            - [ addChild, ['@admin.usuario']] 
            - [ addChild, ['@admin.matricula_servicios']] 
        public: true  

   # Sonata: TemarioAdmin
    admin.temario:
        class: AppBundle\Admin\TemarioAdmin
        arguments: [~, AppBundle\Entity\Temario, AppBundle\Controller\TemarioAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Temarios }
        calls:
            - [ addChild, ['@admin.seccion']] 
            - [ addChild, ['@admin.matricula_temarios']] 
        public: true         

    # Sonata: UsuarioAdmin
    admin.usuario:
        class: SeguridadBundle\Admin\UsuarioAdmin
        arguments: [~, SeguridadBundle\Entity\Usuario, SeguridadBundle\Controller\UsuarioAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Usuarios }
        calls:
            - [ addChild, ['@admin.factura']]
            - [ addChild, ['@admin.matricula_servicios']]     
            - [ addChild, ['@admin.matricula_temarios']] 
            - [ addChild, ['@admin.matricula_secciones']]
        public: true

   # Sonata: VideoAdmin
    admin.video:
        class: AppBundle\Admin\VideoAdmin
        arguments: [~, AppBundle\Entity\Video, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Videos }
        public: true         